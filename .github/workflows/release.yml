name: Release on PR merge

on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Build and test
      run: mvn clean verify -P ex-integration
      
    - name: Get next version
      id: version
      run: |
        # Extract current version and increment patch
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
        MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
        MINOR=$(echo $CURRENT_VERSION | cut -d. -f2) 
        PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
        NEXT_PATCH=$((PATCH + 1))
        RELEASE_VERSION="$MAJOR.$MINOR.$NEXT_PATCH"
        NEXT_DEV_VERSION="$MAJOR.$MINOR.$((NEXT_PATCH + 1))-SNAPSHOT"
        echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
        echo "next_dev_version=$NEXT_DEV_VERSION" >> $GITHUB_OUTPUT
        
    - name: Set release version
      run: mvn versions:set -DnewVersion=${{ steps.version.outputs.release_version }} -DgenerateBackupPoms=false
      
    - name: Deploy to GitHub Packages
      run: mvn deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.release_version }}
        release_name: Release v${{ steps.version.outputs.release_version }}
        draft: false
        prerelease: false
        
    - name: Set next development version
      run: mvn versions:set -DnewVersion=${{ steps.version.outputs.next_dev_version }} -DgenerateBackupPoms=false
      
    - name: Commit version bump
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pom.xml */pom.xml
        git commit -m "Bump to next development version ${{ steps.version.outputs.next_dev_version }}"
        git push